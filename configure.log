# Log file generated by
#
#   './configure --disable-hardening'
#

***** Checking environment *****
Determined build machine: linux.amd64, target machine: linux.amd64


***** Checking kBuild *****
found


***** Checking gcc *****
found version 7.4.0


***** Checking Open Watcom *****
** Open Watcom was not found, using alternative BIOS sources!

***** Checking iasl *****
found version 20180105


***** Checking xslt *****
found


***** Checking pthread *****
compiling the following source file:
#include <cstdio>
#include <pthread.h>
extern "C" int main(void)
{
  pthread_mutex_t mutex;
  if (pthread_mutex_init(&mutex, NULL)) {
    printf("pthread_mutex_init() failed\n");
    return 1;
  }
  if (pthread_mutex_lock(&mutex)) {
    printf("pthread_mutex_lock() failed\n");
    return 1;
  }
  if (pthread_mutex_unlock(&mutex)) {
    printf("pthread_mutex_unlock() failed\n");
    return 1;
  }
  printf("found, OK.\n");
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lpthread"
executing the binary
found, OK.


***** Checking libxml2 *****
compiling the following source file:
#include <cstdio>
#include <libxml/xmlversion.h>
extern "C" int main(void)
{
  printf("found version %s", LIBXML_DOTTED_VERSION);
#if LIBXML_VERSION >= 20626
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 2.6.26 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lxml2 -lpthread -I/usr/include/libxml2"
executing the binary
found version 2.9.4, OK.


***** Checking libIDL *****
found version 0.8.14


***** Checking ssl *****
compiling the following source file:
#include <cstdio>
#include <openssl/opensslv.h>
#include <openssl/ssl.h>
extern "C" int main(void)
{
  printf("found version %s", OPENSSL_VERSION_TEXT);
  SSL_library_init();
#if OPENSSL_VERSION_NUMBER >= 0x10001000
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.0.1 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc " -lssl -lcrypto"
executing the binary
found version OpenSSL 1.1.1  11 Sep 2018, OK.


***** Checking libcurl *****
compiling the following source file:
#include <cstdio>
#include <curl/curl.h>
extern "C" int main(void)
{
  printf("found version %s", LIBCURL_VERSION);
#if 10000*LIBCURL_VERSION_MAJOR + 100*LIBCURL_VERSION_MINOR + LIBCURL_VERSION_PATCH >= 71901
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 7.19.1 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lcurl "
executing the binary
found version 7.58.0, OK.


***** Checking libvpx *****
compiling the following source file:
#include <cstdio>
#include <vpx/vpx_codec.h>
extern "C" int main(void)
{
  int version = vpx_codec_version();
  int verMajor = VPX_VERSION_MAJOR(version);
  int verMinor = VPX_VERSION_MINOR(version);
  int verPatch = VPX_VERSION_PATCH(version);
  printf("found version %d.%d.%d", verMajor, verMinor, verPatch);
  if (   verMajor == 1 && verMinor >= 0
      || verMajor == 0 && verMinor == 9 && verPatch >= 5)
  {
      printf(", OK.\n");
      return 0;
  }
  else
  {
      printf(", expected version 0.9.5 or higher\n");
      return 1;
   }
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lvpx -lm "
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc: In function 'int main()':
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc:10:24: warning: suggest parentheses around '&&' within '||' [-Wparentheses]
   if (   verMajor == 1 && verMinor >= 0
          ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
executing the binary
found version 1.7.0, OK.


***** Checking libopus *****
compiling the following source file:
#include <cstdio>
#include <opus/opus.h>
extern "C" int main(void)
{
  OpusEncoder *test;
  printf("found, OK.\n");
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lopus -I/usr/include/opus"
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc: In function 'int main()':
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc:5:16: warning: unused variable 'test' [-Wunused-variable]
   OpusEncoder *test;
                ^~~~
executing the binary
found, OK.


***** Checking zlib *****
compiling the following source file:
#include <cstdio>
#include <zlib.h>
extern "C" int main(void)
{
  printf("found version %s", ZLIB_VERSION);
#if ZLIB_VERNUM >= 0x1210
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.2.1 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lz "
executing the binary
found version 1.2.11, OK.


***** Checking libpng *****
compiling the following source file:
#include <cstdio>
#include <png.h>
extern "C" int main(void)
{
  printf("found version %s", PNG_LIBPNG_VER_STRING);
#if PNG_LIBPNG_VER >= 10205
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.2.5 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lpng "
executing the binary
found version 1.6.34, OK.


***** Checking SDL *****
compiling the following source file:
#include <cstdio>
#include <SDL.h>
#include <SDL_main.h>
#undef main
extern "C" int main(int argc, char** argv)
{
  printf("found version %d.%d.%d",
         SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
#if SDL_VERSION_ATLEAST(1,2,7)
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.2.7 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/lib/x86_64-linux-gnu -lSDL  -I/usr/include/SDL "
executing the binary
found version 1.2.15, OK.


***** Checking X libraries *****
compiling the following source file:
#include <cstdio>
#include <X11/Xlib.h>
extern "C" int main(void)
{
  Display *dpy;
  int scrn_num;
  Screen *scrn;
  Window win;

  dpy      = XOpenDisplay(NULL);
  scrn_num = DefaultScreen(dpy);
  scrn     = ScreenOfDisplay(dpy, scrn_num);
  win      = XCreateWindow(dpy, RootWindowOfScreen(scrn), 0, 0, 100, 100,
                           0, 16, InputOutput, CopyFromParent, 0, NULL);
  XDestroyWindow(dpy, win);
  XCloseDisplay(dpy);
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -I/usr/local/include"
found


***** Checking Xcursor *****
compiling the following source file:
#include <cstdio>
#include <X11/Xlib.h>
#include <X11/Xcursor/Xcursor.h>
extern "C" int main(void)
{
  XcursorImage *cursor = XcursorImageCreate (10, 10);
  XcursorImageDestroy(cursor);
  return 0;
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lXcursor -I/usr/local/include"
found


***** Checking Xinerama *****
compiling the following source file:
#include <X11/Xlib.h>
#include <X11/extensions/Xinerama.h>
extern "C" int main(void)
{
  Display *dpy;
  Bool flag;
  dpy = XOpenDisplay(NULL);
  if (dpy)
  {
    flag = XineramaIsActive(dpy);
    XCloseDisplay(dpy);
  }
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lXinerama -I/usr/local/include"
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc: In function 'int main()':
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc:6:8: warning: variable 'flag' set but not used [-Wunused-but-set-variable]
   Bool flag;
        ^~~~
found


***** Checking Xrandr *****
compiling the following source file:
#include <X11/Xlib.h>
#include <X11/extensions/Xrandr.h>
extern "C" int main(void)
{
  Display *dpy;
  Bool flag;
  int major, minor;
  dpy = XOpenDisplay(NULL);
  if (dpy)
  {
    flag = XRRQueryVersion(dpy, &major, &minor);
    XCloseDisplay(dpy);
  }
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lXrandr -I/usr/local/include"
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc: In function 'int main()':
/home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc:6:8: warning: variable 'flag' set but not used [-Wunused-but-set-variable]
   Bool flag;
        ^~~~
found


***** Checking Xmu *****
compiling the following source file:
#include <cstdio>
#include <X11/Xatom.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xmu/StdCmap.h>
extern "C" int main(void)
{
  Display *dpy;
  int scrn_num;
  Screen *scrn;

  dpy = XOpenDisplay(NULL);
  if (dpy)
  {
    scrn_num = DefaultScreen(dpy);
    scrn     = ScreenOfDisplay(dpy, scrn_num);
    Status status = XmuLookupStandardColormap(dpy, RootWindowOfScreen(scrn), 0,
                    24, XA_RGB_DEFAULT_MAP, False, True);
    printf("Status = %x\n", status);
    XCloseDisplay(dpy);
  }
  return 0;
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lXmu -I/usr/local/include"
found


***** Checking Mesa / GLU *****
compiling the following source file:
#include <cstdio>
#include <X11/Xlib.h>
#include <GL/glx.h>
#include <GL/glu.h>
extern "C" int main(void)
{
  Display *dpy;
  int major, minor;

  dpy = XOpenDisplay(NULL);
  if (dpy)
  {
    Bool glx_version = glXQueryVersion(dpy, &major, &minor);
    XCloseDisplay(dpy);
    if (glx_version)
    {
      printf("found version %u.%u, OK.\n", major, minor);
      return 0;
    }
  }
  printf("found (inactive), OK.\n");
  return 0;
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/X11R6/lib -L/usr/X11R6/lib64 -L/usr/local/lib -lXext -lX11 -lGL -I/usr/local/include"
executing the binary
found (inactive), OK.


***** Checking Qt5 *****
(Qt5 from pkg-config)
compiling the following source file:
#include <QtGlobal>
extern "C" int main(void)
{
#if QT_VERSION >= 329216
  return 0;
#else
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/lib/x86_64-linux-gnu -lQt5Core -lpthread -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5"
executing the binary (LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu)


compiling the following source file:
#include <cstdio>
#include <QtGlobal>
extern "C" int main(void)
{
  printf("found version %s", QT_VERSION_STR);
#if QT_VERSION >= 329216
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 5.6 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-L/usr/lib/x86_64-linux-gnu -lQt5Core -lpthread -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5 -I/usr/include/x86_64-linux-gnu/qt5/QtCore -I/usr/include/x86_64-linux-gnu/qt5"
executing the binary (LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu)
found version 5.9.5, OK.


***** Checking Qt5 devtools *****
found version moc 5.9.5


***** Checking Python support *****
compiling the following source file:
#include <cstdio>
#include <Python.h>
extern "C" int main(void)
{
  Py_Initialize();
  printf("found version %s", PY_VERSION);
#if PY_VERSION_HEX >= 0x02060000
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 2.6 or higher\n");
  return 1;
#endif
}
using the following command line:
g++ -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc -I/usr/include/python2.7 /usr/lib/x86_64-linux-gnu/libpython2.7.so
executing the binary
found version 2.7.15+, OK.


***** Checking Java support *****



***** Checking PulseAudio *****
compiling the following source file:
#include <cstdio>
#include <pulse/version.h>
extern "C" int main(void)
{
  printf("found version %s API version %d", pa_get_headers_version(), PA_API_VERSION);
#if PA_API_VERSION >= 9
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 0.9.0 (API version 9) or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "  -lpulse"
executing the binary
found version 11.1.0 API version 12, OK.


***** Checking static stc++ library *****
compiling the following source file:
#include <string>

extern "C" int main(void)
{
  std::string s = "test";
  return 0;
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "/usr/lib/gcc/x86_64-linux-gnu/7/libstdc++.a"
found


***** Checking Linux kernel sources *****
compiling the following source file:
#include <linux/version.h>
int printf(const char *format, ...);
int main(void)
{
  printf("found version %d.%d.%d",  LINUX_VERSION_CODE / 65536,
                                   (LINUX_VERSION_CODE % 65536) / 256,
                                    LINUX_VERSION_CODE          % 256);
#if LINUX_VERSION_CODE > KERNEL_VERSION(2,4,0)
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 2.4.0 or higher\n");
  return 1;
#endif
}
using the following command line:
gcc -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.c -nostdinc -I/lib/modules/4.15.0-64-generic/build/include  -I/lib/modules/4.15.0-64-generic/build/include/generated/uapi
executing the binary
found version 4.15.18, OK.


***** Checking ALSA *****
compiling the following source file:
#include <cstdio>
#include <alsa/asoundlib.h>
extern "C" int main(void)
{
  printf("found version %d.%d.%d",
         SND_LIB_MAJOR, SND_LIB_MINOR, SND_LIB_SUBMINOR);
#if 10000*SND_LIB_MAJOR + 100*SND_LIB_MINOR + SND_LIB_SUBMINOR >= 10014
  printf(", OK.\n");
  return 0;
#else
  printf(", expected version 1.0.14 or higher\n");
  return 1;
#endif
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lasound"
executing the binary
found version 1.1.3, OK.


***** Checking libdevmapper *****
compiling the following source file:
#include <cstdio>
extern "C" {
#define private
#include <libdevmapper.h>
int main()
{
  char version[80];

  if (!dm_get_library_version(version, sizeof(version)))
  {
    printf("dm_get_library_version() failed.\n");
    return 1;
  }

  const char* v=version;
  unsigned int major = 0, minor = 0, micro = 0;

  for (; *v !='.' && *v != '\0'; v++) major = major*10 + *v-'0';
  if (*v == '.') v++;
  for (; *v !='.' && *v != '\0'; v++) minor = minor*10 + *v-'0';
  if (*v == '.') v++;
  for (; *v !='.' && *v != '\0'; v++) micro = micro*10 + *v-'0';

  printf("found version %s", version);
  if (major*10000 + minor*100 + micro >= 10200)
  {
    printf(", OK.\n");
    return 0;
  }
  else
  {
    printf(", expected version 1.02 or higher\n");
    return 1;
  }
}
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-ldevmapper "
executing the binary
found version 1.02.145 (2017-11-03), OK.


***** Checking libcap library *****
compiling the following source file:
#include <cstdio>
#include <sys/types.h>
#include <linux/types.h>
#include <sys/capability.h>

extern "C" int main(void)
{
  char buf[1024];
  cap_t caps = cap_get_proc();
  snprintf(buf, sizeof(buf), "Current caps are '%s'\n", cap_to_text(caps, NULL));
  return 0;
}
using the following command line:
g++  -fPIC -g -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.cc "-lcap"
executing the binary


found


***** Checking compiler.h *****
compiler.h not found


***** Checking 32-bit support *****
compiling the following source file:
#include <stdint.h>
int main(void)
{
  return 0;
}
using the following command line:
gcc -m32 -O -Wall -o /home/dddong/softwares/VirtualBox-6.0.12/.tmp_out /home/dddong/softwares/VirtualBox-6.0.12/.tmp_src.c
executing the binary



***** Checking makeself *****
found version 2.3.0


